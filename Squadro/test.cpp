#include <stdexcept>
#include "plateau.h"
#include <iostream>
#include <string>
#include <vector>

#define ASSERT(test)                  \
  if (!(test))                        \
  std::cout << "Test failed in file " \
            << __FILE__ << " line " << __LINE__ << ": " #test << std::endl

void maxTest()
{
  ASSERT(max(1, 2) == 2);
  ASSERT(max(1, 3) == 3);
  ASSERT(max(5, 2) == 5);
  ASSERT(max(-1, -3) == -1);
}

void minTest()
{
  ASSERT(min(1, 2) == 1);
  ASSERT(min(1, 3) == 1);
  ASSERT(min(5, 2) == 2);
  ASSERT(min(-1, -3) == -3);
}

void trouve_joueur1Test()
{
  ASSERT(trouve_joueur1(1, {
    {" ", " ", "1", "3", "2", "3", "1", " ", " "},
    {" ", "X", "*", "*", "*", "*", "*", "X", " "},
    {"1", "*", "*", "*", ">", "*", "*", "*", "3"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"2", ">", "*", "*", "*", "*", "*", "*", "2"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {" ", "X", "^", "^", "^", "^", "^", "X", " "},
    {" ", " ", "3", "1", "2", "1", "3", " ", " "}
  }) == 4);

  ASSERT(trouve_joueur1(3, {
    {" ", " ", "1", "3", "2", "3", "1", " ", " "},
    {" ", "X", "*", "*", "*", "*", "*", "X", " "},
    {"1", ">", "*", "*", "", "*", "*", "*", "3"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"2", "*", "*", "*", "*", "*", "<", "*", "2"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {" ", "X", "^", "^", "^", "^", "^", "X", " "},
    {" ", " ", "3", "1", "2", "1", "3", " ", " "}
  }) == 6);
}

void trouve_joueur2Test()
{
  ASSERT(trouve_joueur2(1, {
    {" ", " ", "1", "3", "2", "3", "1", " ", " "},
    {" ", "X", "*", "*", "*", "*", "*", "X", " "},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"2", ">", "^", "*", "*", "*", "*", "*", "2"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {" ", "X", "*", "^", "^", "^", "^", "X", " "},
    {" ", " ", "3", "1", "2", "1", "3", " ", " "}
  }) == 4);

  ASSERT(trouve_joueur2(2, {
    {" ", " ", "1", "3", "2", "3", "1", " ", " "},
    {" ", "X", "*", "*", "*", "*", "*", "X", " "},
    {"1", ">", "*", "*", "", "*", "*", "*", "3"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"2", ">", "*", "*", "*", "*", "*", "*", "2"},
    {"3", ">", "*", "v", "*", "*", "*", "*", "1"},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {" ", "X", "^", "*", "^", "^", "^", "X", " "},
    {" ", " ", "3", "1", "2", "1", "3", " ", " "}
  }) == 5);
}

void etat_joueur1Test()
{
  ASSERT(etat_joueur1(1, {
    {" ", " ", "1", "3", "2", "3", "1", " ", " "},
    {" ", "X", "*", "*", "*", "*", "*", "X", " "},
    {"1", "*", "*", "*", ">", "*", "*", "*", "3"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"2", ">", "*", "*", "*", "*", "*", "*", "2"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {" ", "X", "^", "^", "^", "^", "^", "X", " "},
    {" ", " ", "3", "1", "2", "1", "3", " ", " "}
  }) == 0);

  ASSERT(etat_joueur1(3, {
    {" ", " ", "1", "3", "2", "3", "1", " ", " "},
    {" ", "X", "*", "*", "*", "*", "*", "X", " "},
    {"1", ">", "*", "*", "", "*", "*", "*", "3"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"2", "*", "*", "*", "<", "*", "*", "*", "2"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {" ", "X", "^", "^", "^", "^", "^", "X", " "},
    {" ", " ", "3", "1", "2", "1", "3", " ", " "}
  }) == 1);
}

void etat_joueur2Test()
{
  ASSERT(etat_joueur2(1, {
    {" ", " ", "1", "3", "2", "3", "1", " ", " "},
    {" ", "X", "*", "*", "*", "*", "*", "X", " "},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"2", ">", "^", "*", "*", "*", "*", "*", "2"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {" ", "X", "*", "^", "^", "^", "^", "X", " "},
    {" ", " ", "3", "1", "2", "1", "3", " ", " "}
  }) == 0);

  ASSERT(etat_joueur2(5, {
    {" ", " ", "1", "3", "2", "3", "1", " ", " "},
    {" ", "X", "*", "*", "*", "*", "*", "X", " "},
    {"1", ">", "*", "*", " ", "*", "*", "*", "3"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"2", ">", "*", "*", "*", "*", "v", "*", "2"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {" ", "X", "^", "^", "^", "^", "*", "X", " "},
    {" ", " ", "3", "1", "2", "1", "3", " ", " "}
  }) == 1);
}

void gameOver1Test()
{
  ASSERT(gameOver1({
    {" ", " ", "1", "3", "2", "3", "1", " ", " "},
    {" ", "X", "*", "*", "*", "*", "*", "X", " "},
    {"1", "-", "*", "*", "*", "*", "*", "*", "3"},
    {"3", "-", "*", "*", "*", "*", "*", "*", "1"},
    {"2", ">", "*", "*", "*", "*", "*", "*", "2"},
    {"3", "-", "*", "*", "*", "*", "*", "*", "1"},
    {"1", "-", "*", "*", "*", "*", "*", "*", "3"},
    {" ", "X", "^", "^", "^", "^", "^", "X", " "},
    {" ", " ", "3", "1", "2", "1", "3", " ", " "}
  }) == true);

  ASSERT(gameOver1({
    {" ", " ", "1", "3", "2", "3", "1", " ", " "},
    {" ", "X", "*", "*", "*", "*", "*", "X", " "},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {"3", "-", "*", "*", "*", "*", "*", "*", "1"},
    {"2", "-", "*", "*", "*", "*", "*", "*", "2"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {" ", "X", "^", "^", "^", "^", "^", "X", " "},
    {" ", " ", "3", "1", "2", "1", "3", " ", " "}
  }) == false);
}

void gameOver2Test()
{
  ASSERT(gameOver2({
    {" ", " ", "1", "3", "2", "3", "1", " ", " "},
    {" ", "X", "*", "*", "*", "*", "*", "X", " "},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"2", ">", "*", "*", "*", "*", "*", "*", "2"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {" ", "X", "-", "-", "-", "-", "^", "X", " "},
    {" ", " ", "3", "1", "2", "1", "3", " ", " "}
  }) == true);

  ASSERT(gameOver2({
    {" ", " ", "1", "3", "2", "3", "1", " ", " "},
    {" ", "X", "*", "*", "*", "*", "*", "X", " "},
    {"1", ">", "*", "*", "", "*", "*", "*", "3"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"2", ">", "*", "*", "*", "*", "*", "*", "2"},
    {"3", ">", "*", "*", "*", "*", "*", "*", "1"},
    {"1", ">", "*", "*", "*", "*", "*", "*", "3"},
    {" ", "X", "-", "-", "-", "^", "^", "X", " "},
    {" ", " ", "3", "1", "2", "1", "3", " ", " "}
  }) == false);
}
